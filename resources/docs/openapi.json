{
    "openapi": "3.0.2",
    "info": {
      "version": "1.0",
      "title": "NestJS OpenApi Login",
      "description": "Está documentação com swagger descreve com detalhes cada endpoint e estrutura de entidades presentes na sua aplicação.",
      "contact": {
        "url": "https://alexandredev.netlify.app/"
      }
    },
    "servers": [
      {
        "url": "https://server.test.api/v1 ",
        "description": "PRD"
      }
    ],
    "paths": {
      "/users": {
        "post": {
          "tags": [
            "Campanhas"
          ],
          "summary": "Cadastrar usuarios",
          "description": "envia dados para cadastro de um usuario",
          "operationId": "post-cadastro",
          "requestBody": {
            "description": "Envia dados de cadastro",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserDTO"
                },
                "examples": {
                  "Cadastro usuario": {
                    "value": {
                      "name": "Fulano de Tal Pereira",
                      "email": "fulanodetal@gmail.com",
                      "password": "Senha@123456",
                      "birthAt": "2010-07-30T16:25:43.511Z",
                      "role": 2,
                      "usuario_id": 1
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created."
            },
            "400": {
              "description": "This email already exists."
            },
            "404": {
              "description": "The user does not exist.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateUserDTO"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "name": "Anthony souza",
                        "email": "Anthonysouza@gmail.com",
                        "password": "$2b$10$hnGTnP/RVq8TtfRSn2YvEOCH3UH3DJMhxYG0mxM5krpc7A0BRAYcO",
                        "birthAt": null,
                        "id": 15,
                        "createdAt": "2023-07-26T01:59:43.576Z",
                        "updatedAt": "2023-07-26T01:59:43.576Z",
                        "role": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/campanhas/{id}/tipos-de-uso": {
        "post": {
          "tags": [
            "Tipos de Uso"
          ],
          "summary": "Cadastrar Tipo de Uso",
          "description": "### Visão Geral\n\nCadastrar tipo de uso para uma campanha.\n\n### Critérios de Aceite\n\n- Validar campanha existente;\n- Validar tipo de uso já cadastrado;\n- Caso `escopo_desconto == PRODUTOS_LIMITADOS`, validar a obrigatoriedade de cadastro de `consumo_minimo_produtos`;\n- Caso `Campanha.tipo_desconto == VALOR_FIXO_PRODUTO`, validar a obrigatoriedade de cadastro de `consumo_minimo_produtos.valor_fixo_produto`;\n- Caso `Campanha.tipo_desconto == VALOR_FIXO_PRODUTO`, o escopo de desconto deve ser igual a `PRODUTOS_LIMITADOS`.",
          "operationId": "post-campanhas-id-tipos-de-uso",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Identificador de Campanhas",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "requestBody": {
            "description": "Tipo de Uso a ser cadastrado para uma campanha.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TiposDeUsoDTOReq"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "valor_minimo": 100,
                      "escopo_desconto": "PRODUTOS_LIMITADOS",
                      "consumo_minimo_produtos": [
                        {
                          "tipo_consumo": "QUANTIDADE",
                          "consumo_minimo": 3,
                          "tipo_codigo": "GRUPO",
                          "codigo_produto": [
                            "107"
                          ],
                          "codigo_tipo_produto": [
                            "877"
                          ],
                          "texto_descricao_restricao": "É necessário ter no mínimo 1 filtro de óleo homologado.",
                          "valor_fixo_produto": 0.15
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Tipo de uso cadastrado."
            },
            "400": {
              "$ref": "#/components/responses/400BadRequest"
            },
            "401": {
              "description": "Verifique suas credenciais, possivelmente você não tem acesso."
            },
            "412": {
              "description": "Verifique as pré-condições não satisfeitas.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| PF001 | Campanha não encontrada. |\n| PF002 | Tipo de uso já cadastrado. |",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "BE001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "Consumo mínimo de produtos é obrigatório quando o escopo de desconto é igual a PRODUTOS_LIMITADOS.",
                        "name": "BUSINESS_ERROR",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "422": {
              "description": "Verifique os dados enviados ou parâmetros, possíveis erros de requisição.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| BE001 | Consumo mínimo de produtos é obrigatório quando o escopo de desconto é igual a `PRODUTOS_LIMITADOS`. |\n| BE002 | O valor fixo dos produtos no consumo mínimo de produtos é obrigatório quando o tipo de desconto da campanha é igual a `VALOR_FIXO_PRODUTO`. |\n| BE003 | O escopo de desconto deve ser igual a `PRODUTOS_LIMITADOS` quando o tipo de desconto da campanha é igual a `VALOR_FIXO_PRODUTO`.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "BE001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "Consumo mínimo de produtos é obrigatório quando o escopo de desconto é igual a `PRODUTOS_LIMITADOS`.",
                        "name": "BUSINESS_ERROR",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500InternalServerError"
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        },
        "patch": {
          "tags": [
            "Tipos de Uso"
          ],
          "summary": "Alterar tipo de uso",
          "description": "### Visão Geral\n\nAlterar configurações de tipo de uso de uma campanha.\n\n### Critérios de Aceite\n\n- Validar campanha existente;\n- Validar campanha com status `PLANEJADA` ou `ATIVA`;\n- Validar tipo de uso já cadastrado;\n- Caso `escopo_desconto == PRODUTOS_LIMITADOS`, validar a obrigatoriedade de cadastro de `consumo_minimo_produtos.valor_fixo_produto`;\n- Caso `Campanha.tipo_desconto == VALOR_FIXO_PRODUTO`, o escopo de desconto deve ser igual a `PRODUTOS_LIMITADOS`.\n\n*Auditoria*:\n- Armazenar o histórico das alterações realizadas, com os atributos modificados, data e hora.\n\n*Monitoramento*:\n- Possibilitar o monitoramento de integridade e funcionamento das APIs Conecta envolvidas, assim como a consulta aos logs da operação.",
          "operationId": "patch-campanhas-id-tipos-de-uso",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Identificador de Campanhas",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "requestBody": {
            "description": "Tipo de uso a ser atualizado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TiposDeUsoDTOReq"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "valor_minimo": 100,
                      "escopo_desconto": "PRODUTOS_LIMITADOS",
                      "consumo_minimo_produtos": [
                        {
                          "tipo_consumo": "QUANTIDADE",
                          "consumo_minimo": 3,
                          "tipo_codigo": "GRUPO",
                          "codigo_produto": [
                            "107"
                          ],
                          "codigo_tipo_produto": [
                            "877"
                          ],
                          "texto_descricao_restricao": "É necessário ter no mínimo 1 filtro de óleo homologado.",
                          "valor_fixo_produto": 0.15
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Tipo de uso atualizado."
            },
            "400": {
              "$ref": "#/components/responses/400BadRequest"
            },
            "401": {
              "description": "Verifique suas credenciais, possivelmente você não tem acesso."
            },
            "412": {
              "description": "Verifique as pré-condições não satisfeitas.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| PF001 | Campanha não encontrada. |\n| PF002 | Tipo de uso não encontrado. |",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "PF001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "Campanha não encontrada.",
                        "name": "PRECONDITION_FAILED",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "422": {
              "description": "Verifique os dados enviados ou parâmetros, possíveis erros de requisição.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| BE001 | A campanha deve ter situação igual a `PLANEJADA` ou `ATIVA`. |\n| BE002 | Consumo mínimo de produtos é obrigatório quando o escopo de desconto é igual a `PRODUTOS_LIMITADOS`. |\n| BE003 | O valor fixo dos produtos no consumo mínimo de produtos é obrigatório quando o tipo de desconto da campanha é igual a `VALOR_FIXO_PRODUTO`. |\n| BE004 | O escopo de desconto deve ser igual a `PRODUTOS_LIMITADOS` quando o tipo de desconto da campanha é igual a `VALOR_FIXO_PRODUTO`.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "BE001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "A campanha deve ter situação igual a PLANEJADA ou ATIVA.",
                        "name": "BUSINESS_ERROR",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500InternalServerError"
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/campanhas/{id}/restricoes-clientes": {
        "post": {
          "tags": [
            "Restrições de Clientes"
          ],
          "summary": "Cadastrar restrições de clientes",
          "description": "Cadastro de restrições de clientes para uma campanha",
          "operationId": "post-campanhas-id-restricoes-clientes",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Identificador de Campanhas",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "requestBody": {
            "description": "Lista de restrições de clientes a serem cadastradas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestricoesClientesPostDTO"
                },
                "examples": {
                  "dados exemplo": {
                    "value": {
                      "restricao": "HABILITADO",
                      "cpf": [
                        "11111111111"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/campanhas/{id}/restricoes-veiculos": {
        "post": {
          "tags": [
            "Restrições de Veículos"
          ],
          "summary": "Cadastrar lista de restrições de veículos",
          "description": "Cadastro de lista de restrições de veículos para uma campanha",
          "operationId": "post-campanhas-id-restricoes-veiculos",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Identificador de Campanhas",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestricoesVeiculosPostDTO"
                },
                "examples": {
                  "dados exemplo": {
                    "value": {
                      "restricao": "HABILITADO",
                      "placas": [
                        "AAA1234"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "412": {
              "description": "Campanha não encontrada",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Campanha não encontrada": {
                      "value": {
                        "namespace": "voucher-landingpage-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "string",
                        "correlationId": 0,
                        "debugId": "string",
                        "message": "Campanha não encontrada",
                        "name": "string",
                        "details": null
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/campanhas/{id}/locais-habilitados": {
        "post": {
          "tags": [
            "Locais Habilitados"
          ],
          "summary": "Cadastrar locais habilitados",
          "description": "### Visão Geral\n\nCadastrar locais habilitados para uma campanha.\n\n### Critérios de Aceite\n\n- Validar campanha existente;\n- Validar local habilitado já cadastrado.",
          "operationId": "post-campanhas-id-locais-habilitados",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Identificador de Campanhas",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "requestBody": {
            "description": "Lista de locais habilitados a serem cadastrados.\n\n- `situação` (obrigatório): Situação de uso do cupom nos locais registrados.\n  - `HABILITADO`: os locais registrados estarão habilitados para uso do cupom;\n  - `DESABILITADO`: os locais registrados estarão impedidos de permitir uso do cupom.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocaisHabilitadosDTO"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "situacao": "HABILITADO",
                      "componentes_postos": [
                        {
                          "cnpj_componente": "64315440000110",
                          "codigo_componente": 1332263,
                          "latitude_componente": -22.869339066069102,
                          "longitude_componente": -43.78939611683358
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Local habilitado cadastrado."
            },
            "400": {
              "$ref": "#/components/responses/400BadRequest"
            },
            "401": {
              "description": "Verifique suas credenciais, possivelmente você não tem acesso."
            },
            "412": {
              "description": "Verifique as pré-condições não satisfeitas.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| PF001 | Campanha não encontrada. |\n| PF002 | Local habilitado já cadastrado. |",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "PF001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "Campanha não encontrada.",
                        "name": "PRECONDITION_FAILED",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500InternalServerError"
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        },
        "patch": {
          "tags": [
            "Locais Habilitados"
          ],
          "summary": "Alterar locais habilitados",
          "description": "### Visão Geral\n\nAlterar locais habilitados para uma campanha.\n\n### Critérios de Aceite\n\n- Validar campanha existente;\n- Validar campanha com status `PLANEJADA` ou `ATIVA`;\n- Validar locais habilitados cadastrados.\n\n*Auditoria*:\n- Armazenar o histórico das alterações realizadas, com os atributos modificados, data e hora.\n\n*Monitoramento*:\n- Possibilitar o monitoramento de integridade e funcionamento das APIs Conecta envolvidas, assim como a consulta aos logs da operação.",
          "operationId": "patch-campanhas-id-locais-habilitados",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Identificador de Campanhas",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "requestBody": {
            "description": "Locais habilitados a serem atualizados.\n\n- `situação` (obrigatório): Situação de uso do cupom nos locais registrados.\n  - `HABILITADO`: os locais registrados estarão habilitados para uso do cupom;\n  - `DESABILITADO`: os locais registrados estarão impedidos de permitir uso do cupom.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocaisHabilitadosDTO"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "situacao": "HABILITADO",
                      "componentes_postos": [
                        {
                          "cnpj_componente": "64315440000110",
                          "codigo_componente": 1332263,
                          "latitude_componente": -22.869339066069102,
                          "longitude_componente": -43.78939611683358
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Locais habilitados atualizados."
            },
            "400": {
              "$ref": "#/components/responses/400BadRequest"
            },
            "401": {
              "description": "Verifique suas credenciais, possivelmente você não tem acesso."
            },
            "412": {
              "description": "Verifique as pré-condições não satisfeitas.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| PF001 | Campanha não encontrada. |\n| PF002 | Local habilitado não encontrado. |",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "PF001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "Campanha não encontrada.",
                        "name": "PRECONDITION_FAILED",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "422": {
              "description": "Verifique os dados enviados ou parâmetros, possíveis erros de requisição.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| BE001 | A campanha deve ter situação igual a `PLANEJADA` ou `ATIVA`. |",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "BE001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "A campanha deve ter situação igual a PLANEJADA ou ATIVA.",
                        "name": "BUSINESS_ERROR",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500InternalServerError"
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        },
        "get": {
          "tags": [
            "Locais Habilitados"
          ],
          "summary": "Consultar locais habilitados",
          "description": "### Visão Geral\n\nConsultar locais habilitados de uma campanha.\n\n### Critérios de Aceite\n\n- Verificar campanha existente.\n- Verificar locais habilitados cadastrados.",
          "operationId": "get-campanhas-id-locais-habilitados",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Identificador de Campanhas",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Objeto de locais habilitados cadastrados para a campanha.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LocaisHabilitadosDTO"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "situacao": "HABILITADO",
                        "componentes_postos": [
                          {
                            "cnpj_componente": "64315440000110",
                            "codigo_componente": 1332263,
                            "latitude_componente": -22.869339066069102,
                            "longitude_componente": -43.78939611683358
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Verifique suas credenciais, possivelmente você não tem acesso."
            },
            "404": {
              "description": "Sem resultados a serem retornados.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "landing-page",
                        "informationLink": "http://localhost",
                        "code": "NF001",
                        "correlationId": null,
                        "debugId": "09a2263a-c0c2-4270-9374-d211dd763035",
                        "message": "Locais habilitados não encontrados.",
                        "name": "NOT_FOUND",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "412": {
              "description": "Verifique as pré-condições não satisfeitas.\n\n| Error Code      | Description |\n| ---------------- | ------------|\n| PF001 | Campanha não encontrada. |",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "PF001",
                        "correlationId": null,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "Campanha não encontrada.",
                        "name": "PRECONDITION_FAILED",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500InternalServerError"
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/campanhas/publicar": {
        "post": {
          "tags": [
            "Campanhas"
          ],
          "summary": "Publicar campanhas",
          "description": "Publica Campanhas Promocionais para que fiquem disponíveis para consumo.\n\nRealiza a **ativação** das Campanhas publicando em redes sociais configuradas e disponibiliza para Consumidores Finais, Automação e Indicar\n\nA campanha publicada deve ter o atributo `situacao` alterado para **`ATIVA`**.\n\nA publicação deve ser realizada em tópico **`\"aws_voucherdigital_campanhas_promocionais\"`** no **Kafka**\n\n## Requisitos\n\nServiços e Tecnologias envolvidas na publicação das Campanhas Promocionais\n\nTecnologias:\n- Kafka: Tópico para disponibilizar os recursos para _Voucher Portal Landing-page_, _Voucher Manager_ e publicação em serviços contratados.\n\nServiços:  \n- Waze: _TBD_\n- Whatsapp: _TBD_\n- Instagram: _TBD_\n- Whatsapp: _TBD_\n\n\n## Critérios de aceite\n\nPara que uma campanha seja considerada pronta para publicação e ser ativada, é necessário:  \n- só podem ser publicadas aquelas que a **`Situacao`** estiver `PLANEJADA`;\n- Não podem ser (re)publicadas aquelas que a **`Situacao`** estiver `ATIVA`;\n- haver pelo menos um local habilitado;\n- estar vigente, ou seja, a data atual estar entre a data de início e data de término;\n- conter pelo menos um tipo de uso cadastrado.\n- Estado de fluxo da Campanha.  \n  Atributo **`Situacao`**:\n  - `ATIVA`: Estado a ser atribuído após publicação da campanha. E a Campanha poderá:  \n    - ser publicada em redes sociais permitidas;\n    - ser disponibilizada para _Voucher Portal Landing-page_;\n    - ser disponibilizada para _Voucher Manager_.\n\nAs Campanhas válidas serão publicadas (ou atualizadas) em tópico **Kafka** (**`\"aws_voucherdigital_campanhas_promocionais\"`**). Deverá ser publicado no tópico Kafka o `CampanhasPublicadasODTO`.",
          "operationId": "post-campanhas-publicar",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identidificador de Campanha Promocionail a serm publicada e ativada"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "examples": {
                  "Plublica e Ativa Campanha 1": {
                    "value": {
                      "id": 1
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Objetos de Campanhas Promocionais a publicadas (ATIVADA)\n\nA publicação destes objetos devem ser realizadas em tópico **`\"aws_voucherdigital_campanhas_promocionais\"`** no **Kafka**.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID de campanha requisitada para publicação.",
                          "format": "int32"
                        },
                        "mensagem": {
                          "type": "string",
                          "description": "Mensagem de sucesso ou incosistências na publicação da campanha informada.",
                          "example": "Campanha publicada"
                        }
                      },
                      "format": "int32"
                    }
                  },
                  "examples": {
                    "resultado de publicação": {
                      "value": [
                        {
                          "id": 1,
                          "mensagem": "Campanha publicada"
                        },
                        {
                          "id": 2,
                          "mensagem": "Campanha sem registro de Locais Habilitados"
                        },
                        {
                          "id": 3,
                          "mensagem": "Campanha sem Tipos de uso informado"
                        },
                        {
                          "id": 4,
                          "mensagem": "Campanha com data de início ou fim fora de limite da data atual"
                        },
                        {
                          "id": 5,
                          "mensagem": "Campanha não encontrada"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/campanhas/publicadas": {
        "get": {
          "tags": [
            "Campanhas"
          ],
          "summary": "Obter campanhas publicadas",
          "description": "Obtém campanhas publicadas.",
          "operationId": "get-campanhas-publicadas",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CampanhaPublicadaDTORes"
                    }
                  },
                  "examples": {
                    "Example 1": {
                      "value": [
                        {
                          "id": 1,
                          "titulo": "Ano Novo é uma Viagem",
                          "subtitulo": "Abasteça e passe o Ano Novo viajando com a família",
                          "descricao": "Abasteça N litros nos postos da BR-040 e ganhe desconto nas lojas AmPm",
                          "data_inicio": "2022-12-01T00:00:01",
                          "data_termino": "2023-01-31T23:59:59",
                          "imagem_ancora": "string",
                          "tipo_campanha": "IPIRANGA",
                          "un_gestora": "Marketing",
                          "situacao": "PLANEJADA",
                          "tipo_desconto": "BRL",
                          "valor_desconto": 10,
                          "maximo_desconto": 200,
                          "quantidade_cupons": 1000,
                          "periodo_expiracao_cupom": 5,
                          "cupons_resgatados": 7,
                          "cupons_queimados": 5,
                          "rede_social_publicada": [
                            "Instagram"
                          ],
                          "usuario_id": "fulano.id",
                          "cupons_limite_usuario": {
                            "quantidade": 1,
                            "periodicidade": "CAMPANHA"
                          },
                          "perfil_acesso_id": "marketing",
                          "data_cadastro": "2019-08-24T14:15:22Z",
                          "data_atualizacao": "2019-08-24T14:15:22Z",
                          "restricoes_clientes": [
                            {
                              "id": 1,
                              "campanhas_id": 1,
                              "restricao": "HABILITADO",
                              "cpf": [
                                "11111111111"
                              ],
                              "data_cadastro": "2019-08-24T14:15:22Z",
                              "data_atualizacao": "2019-08-24T14:15:22Z"
                            }
                          ],
                          "restricoes_veiculos": [
                            {
                              "id": 1,
                              "campanhas_id": 1,
                              "restricao": "HABILITADO",
                              "placas": [
                                "AAA1234"
                              ],
                              "data_cadastro": "2019-08-24T14:15:22Z",
                              "data_atualizacao": "2019-08-24T14:15:22Z"
                            }
                          ],
                          "tipos_usos": {
                            "id": 1,
                            "campanhas_id": 1,
                            "valor_minimo": 100,
                            "escopo_desconto": "TOTAL",
                            "consumo_minimo_produtos": [
                              {
                                "tipo_consumo": "QUANTIDADE",
                                "consumo_minimo": 3,
                                "tipo_codigo": "GRUPO",
                                "codigo_produto": [
                                  "107"
                                ],
                                "codigo_tipo_produto": [
                                  "877"
                                ],
                                "textoDescricaoRestricao": "É necessário ter no mínimo 1 filtro de óleo homologado."
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500InternalServerError"
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/campanhas/finalizar": {
        "post": {
          "tags": [
            "Campanhas"
          ],
          "summary": "Finalizar campanhas",
          "description": "### Visão Geral\n\nEncerra campanhas promocionais para que fiquem indisponíveis para consumo.\n\nAs campanhas possuem seu tempo útil. Sendo o período no qual será divulgada e permitirá novos resgates de cupom. Assim, deve ser possível que uma campanha seja encerrada, bloqueando novos resgates e expirando os cupons ainda ativos e não resgatados.\n\n### Critérios de aceite\n\nPara que uma campanha seja considerada elegível para ser encerrada, é necessário:  \n- Campanha existente conter a **`Situacao`** como `ATIVA`;\n- Alterar tributo **`Situacao`** da campanha para `FINALIZADA`;\n- Para cada cupom `ATIVO` na campanha, deve ser verificado se existe alguma queima sem data de cancelamento associada:\n  - Caso verdadeiro: sua `situacao` deve ser alterada para `UTILIZADO`;\n  - Caso falso: sua `situacao` deve ser alterada para `EXPIRADO`.\n- Manter rastreabilidade dos dados, sendo possível identificar a data e hora de encerramento da campanha;\n\n*Monitoramento*:\n\n- Possibilitar o monitoramento de integridade e funcionamento das APIs Conecta envolvidas, assim como a consulta aos logs da operação.\n",
          "operationId": "post-campanhas-finalizar",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampanhasFinalizarDTO"
                },
                "examples": {
                  "Finaliza Campanha 1": {
                    "value": {
                      "id": 1
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Campanha encerrada com sucesso"
            },
            "422": {
              "description": "Verifique os dados enviados ou parâmetros, possíveis erros de requisição.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "Campanha não está ATIVA": {
                      "value": {
                        "namespace": "voucher-portal-campanhas-api",
                        "informationLink": "http://localhost",
                        "code": "BE001",
                        "correlationId": null,
                        "debugId": "25e720c7-fed5-468c-b3ef-a6adfc156002",
                        "message": "Campanha com situação diferente de ATIVA",
                        "name": "BUSINESS_ERROR",
                        "details": null
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/parametrizacoes": {
        "get": {
          "tags": [
            "Parametrizações"
          ],
          "summary": "Obter parametrizações",
          "description": "Obtem parametrizações para o sistema e para campanhas.\n\nRestrições:\n- operações nesta tabela devem ser realizadas no `ID = 1`",
          "operationId": "get-parametrizacoes",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Parametrizacoes"
                  },
                  "examples": {
                    "dados exemplo": {
                      "value": {
                        "campanha_valor_minimo_desconto": 0,
                        "campanha_valor_maximo_desconto": 100,
                        "campanha_taxa_minima_desconto": 0,
                        "campanha_taxa_maxima_desconto": 5,
                        "campanha_valor_minimo_desconto_taxa": 0,
                        "campanha_valor_maximo_desconto_taxa": 0,
                        "campanha_periodo_minimo_expiracao_cupom": 0,
                        "campanha_periodo_maximo_expiracao_cupom": 0,
                        "campanha_quantidade_minima_cupons": 0,
                        "campanha_quantidade_maxima_cupons": 0,
                        "campanha_redes_sociais_habilitadas": [
                          "Waze"
                        ],
                        "data_cadastro": "2019-08-24T14:15:22Z",
                        "data_atualizacao": "2019-08-24T14:15:22Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        },
        "patch": {
          "tags": [
            "Parametrizações"
          ],
          "summary": "Atualizar parametrizações",
          "description": "Atualiza parametrizações para o sistema e para campanhas\n\nRestrições:\n- operações nesta tabela devem ser realizadas no `ID = 1`",
          "operationId": "patch-parametrizacoes",
          "requestBody": {
            "description": "Enviar um ou todos os atributos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parametrizacoes"
                },
                "examples": {
                  "todos ou apenas um dos atributos": {
                    "value": {
                      "campanha_valor_minimo_desconto": 0,
                      "campanha_valor_maximo_desconto": 0,
                      "campanha_taxa_minima_desconto": 0,
                      "campanha_taxa_maxima_desconto": 0,
                      "campanha_valor_minimo_desconto_taxa": 0,
                      "campanha_valor_maximo_desconto_taxa": 0,
                      "campanha_periodo_minimo_expiracao_cupom": 0,
                      "campanha_periodo_maximo_expiracao_cupom": 0,
                      "campanha_quantidade_minima_cupons": 0,
                      "campanha_quantidade_maxima_cupons": 0,
                      "campanha_redes_sociais_habilitadas": [
                        "Waze"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "campo inválido": {
                      "value": {
                        "namespace": "voucher-portal-campanhas-api",
                        "informationLink": "http://localhost/docs/",
                        "code": "VL001",
                        "correlationId": 0,
                        "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                        "message": "Um ou mais campos foram informados indevidamente.",
                        "name": "VALIDATION_ERROR",
                        "details": [
                          {
                            "field": "valor_minimo_desconto",
                            "issue": "value_error.notexists",
                            "location": "body"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/health": {
        "get": {
          "tags": [
            "Monitoramentos"
          ],
          "summary": "Verificar estado da API",
          "description": "Verifica estado da API",
          "operationId": "get-health",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "default": "text/plain"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiInfoDTO"
                  },
                  "examples": {
                    "app info": {
                      "value": {
                        "id": "voucher-manager-api",
                        "version": "develop",
                        "build": "123",
                        "release": "ddf3efa",
                        "message": "A aplicação está em execução"
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "API-Key-Token": []
            }
          ],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      },
      "/health/status": {
        "get": {
          "tags": [
            "Monitoramentos"
          ],
          "summary": "Verificar estado dos serviços",
          "description": "Verificar que estão saudáveis tanto a API quanto os serviços que esta depende",
          "operationId": "get-health-status",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "default": "text/plain"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiStatusDTO"
                  },
                  "examples": {
                    "api healthy": {
                      "value": {
                        "api": "OK",
                        "database": "OK",
                        "databaseMigrationVersion": "8763670fcdd8",
                        "corporate": "OK",
                        "login": "OK",
                        "dataStreaming": "OK",
                        "dataCache": "OK",
                        "message": "API em execução.",
                        "details": []
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Serviços internos instáveis",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPResponseErrors"
                  },
                  "examples": {
                    "api unhealthy com erros internos": {
                      "value": {
                        "namespace": "voucher-campanhas-api",
                        "informationLink": "http://localhost:/docs",
                        "code": "IE001",
                        "correlationId": 0,
                        "debugId": "string",
                        "message": "Serviços internos instáveis",
                        "name": "INTERNAL_SERVICE_ERROR",
                        "details": [
                          {
                            "field": "corporate",
                            "issue": "serviço de dados corporativos instável ou fora do ar.",
                            "location": "internal"
                          },
                          {
                            "field": "dataStreaming",
                            "issue": "serviço de streaming instável ou fora do ar.",
                            "location": "internal"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [],
          "servers": [
            {
              "url": "https://marketing.mule.lab.sinapseapis.com/voucher/portal-campanhas ",
              "description": "LAB"
            },
            {
              "url": "https://marketing.mule.hml.sinapseapis.com/voucher/portal-campanhas ",
              "description": "HML"
            },
            {
              "url": "https://marketing.mule.prd.sinapseapis.com/voucher/portal-campanhas ",
              "description": "PRD"
            }
          ]
        }
      }
    },
    "tags": [
      {
        "name": "Campanhas",
        "description": "Manutenção de Campanhas Promocionais"
      },
      {
        "name": "Locais Habilitados",
        "description": "Locais habilitados para Campanhas Promocionais"
      },
      {
        "name": "Restrições de Clientes",
        "description": "Restrições de Clientes em Campanhas Promocionais"
      },
      {
        "name": "Restrições de Veículos",
        "description": "Restrições de Veículos em Campanhas Promocionais"
      },
      {
        "name": "Tipos de Uso",
        "description": "Tipos de Uso para Campanhas Promocionais"
      },
      {
        "name": "Parametrizações",
        "description": "Parametrizações para Campanhas Promocionais"
      },
      {
        "name": "Monitoramentos",
        "description": "endpoints voltados para monitoramento da API"
      }
    ],
    "components": {
      "securitySchemes": {
        "API-Key-Token": {
          "type": "http",
          "scheme": "bearer"
        }
      },
      "responses": {
        "400BadRequest": {
          "description": "Verifique os dados enviados, possíveis erros de requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HTTPResponseErrors"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "namespace": "voucher-campanhas-api",
                    "informationLink": "http://localhost:/docs",
                    "code": "VL001",
                    "correlationId": null,
                    "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                    "message": "Um ou mais campos foram informados indevidamente.",
                    "name": "VALIDATION_ERROR",
                    "details": [
                      {
                        "field": "data_inicio",
                        "issue": "value_error.missing",
                        "location": "body"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "500InternalServerError": {
          "description": "Ops, algo aconteceu no servidor :(  \nVerifique o debugId e entre em contato com o suporte do Conecta.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HTTPResponseErrors"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "namespace": "voucher-manager-api",
                    "informationLink": "http://localhost:/docs",
                    "code": "IE001",
                    "correlationId": null,
                    "debugId": "5013d743-f534-4bb3-b6cc-69787044fc8d",
                    "message": "Erro interno de servidor.",
                    "name": "INTERNAL_SERVER_ERROR",
                    "details": []
                  }
                }
              }
            }
          }
        }
      },
      "schemas": {
        "CreateUserDTO": {
          "type": "object",
          "title": "CreateUserDTO",
          "description": "Modelo de Dados para cadastro de usuarios.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Nome do usuario",
              "minLength": 0,
              "maxLength": 30,
              "example": "Fulano de Tal Pereira"
            },
            "email": {
              "type": "string",
              "description": "E-mail do usuario",
              "minLength": 10,
              "maxLength": 50,
              "example": "Glaucio@gmail.com"
            },
            "password": {
              "type": "string",
              "description": "Senha do usuario",
              "minLength": 6,
              "minUppercase": 1,
              "minLowercase": 1,
              "example": "Senha@123456"
            },
            "birthAt": {
              "type": "string",
              "description": "Data de aniversario",
              "format": "date-string",
              "example": "2023-07-26T01:59:43.576Z"
            },
            "role": {
              "type": "number",
              "description": "1 para usuario e 2 para usuario administrativo",
              "format": "number",
              "example": "2"
            },
            "Id": {
              "type": "number",
              "description": "Id do usuario",
              "format": "number",
              "example": "2"
            }
          },
          "required": [
            "name",
            "email",
            "password"
          ]
        },
        "HTTPResponseErrors": {
          "type": "object",
          "description": "Para tratamento de erro utilizamos um json schema que tem como objetivo tratar os diferentes casos de erros",
          "properties": {
            "namespace": {
              "type": "string",
              "description": "Dominio responsavel por responder o erro",
              "example": "voucher-campanhas-api"
            },
            "informationLink": {
              "type": "string",
              "description": "Link completo para alguma documentação adicional",
              "example": "http://localhost:/docs"
            },
            "code": {
              "type": "string",
              "description": "ID do erro",
              "example": "VL001"
            },
            "correlationId": {
              "type": "integer",
              "nullable": true,
              "description": "Id usado para aplicações distribuídas, para soluções com trace distribuído utilizar o campo do framework escolhido"
            },
            "debugId": {
              "type": "string",
              "description": "Id unico gerado no servidor para fins de debug",
              "example": "5013d743-f534-4bb3-b6cc-69787044fc8d"
            },
            "message": {
              "type": "string",
              "description": "Mensagem informando de forma geral o que ocorreu\n(explicada melhor dentro do details: issue)",
              "example": "Um ou mais campos foram informados indevidamente."
            },
            "name": {
              "type": "string",
              "description": "Nome unico para descrever o erro. Deve ser possível entender o erro ocorrido pelo nome",
              "example": "VALIDATION_ERROR"
            },
            "details": {
              "type": "array",
              "nullable": true,
              "description": "Detalhamentos dos erros ocorridos, caso de erro 400 esse campo é obrigatório e deverá descrever o campo faltante",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/HTTPResponseErrorsDetails"
                  },
                  {
                    "$ref": "#/components/schemas/HTTPResponseStatusErrorsDetails"
                  }
                ]
              }
            }
          },
          "required": [
            "namespace",
            "informationLink",
            "code",
            "correlationId",
            "debugId",
            "message",
            "name",
            "details"
          ]
        },
        "HTTPResponseErrorsDetails": {
          "type": "object",
          "title": "HTTPResponseErrorsDetails",
          "description": "Detalhamentos dos erros ocorridos, caso de erro 400 esse campo é obrigatório e deverá descrever o campo faltante.",
          "properties": {
            "field": {
              "type": "string",
              "description": "Json Pointer informando qual o campo ocorreu o erro",
              "example": "data_inicio"
            },
            "issue": {
              "type": "string",
              "description": "A razão do erro (detalhe do informado no message)",
              "example": "value_error.missing"
            },
            "location": {
              "type": "string",
              "description": "Onde ocorreu o erro (ex: query, body, path)",
              "example": "body"
            }
          }
        },
        "HTTPResponseStatusErrorsDetails": {
          "type": "object",
          "title": "HTTPResponseStatusErrorsDetails",
          "description": "Detalhamentos dos erros ocorridos em serviços integrados internos, como: banco de dados, ensemble etc.",
          "properties": {
            "service": {
              "type": "string",
              "description": "Nome do serviço com erro",
              "example": "database"
            },
            "error": {
              "type": "string",
              "description": "Erro ocorrido com o serviço",
              "example": "OperationalError('error description...')"
            }
          },
          "required": [
            "service",
            "error"
          ]
        },
        "TiposDeUsoDTOReq": {
          "type": "object",
          "title": "TiposdeUsoDTOReq",
          "description": "Estrutura de dados para cadastro de configurações de tipo de uso possíveis em uma Campanha Promocional",
          "properties": {
            "valor_minimo": {
              "type": "number",
              "nullable": true,
              "description": "Valor mínimo líquido (com desconto aplicado) necessário de toda a cesta para utilização do cupom.",
              "example": 100
            },
            "escopo_desconto": {
              "enum": [
                "TOTAL",
                "PRODUTOS_LIMITADOS"
              ],
              "description": "Escopo do desconto a ser aplicado: `TOTAL` ou `PRODUTOS_LIMITADOS`.",
              "example": "PRODUTOS_LIMITADOS"
            },
            "consumo_minimo_produtos": {
              "type": "array",
              "description": "Consumo mínimo individualizado por produto necessário para aplicação do desconto.",
              "items": {
                "type": "object",
                "properties": {
                  "tipo_consumo": {
                    "enum": [
                      "QUANTIDADE",
                      "VALOR"
                    ],
                    "description": "Tipo de consumo a ser validado, por quantidade ou valor total de produto.",
                    "example": "QUANTIDADE"
                  },
                  "consumo_minimo": {
                    "type": "number",
                    "description": "Quantidade ou Valor mínimo necessário do produto.",
                    "minimum": 1,
                    "example": 3
                  },
                  "tipo_codigo": {
                    "enum": [
                      "GRUPO",
                      "PRODUTO"
                    ],
                    "description": "Tipo do código de produto enviado: GRUPO ou PRODUTO.",
                    "example": "GRUPO"
                  },
                  "codigo_produto": {
                    "type": "array",
                    "description": "Identificação dos produtos ou grupos de produtos, onde um deles precisa estar na compra para ser aplicado o desconto.",
                    "items": {
                      "type": "string",
                      "example": "107"
                    }
                  },
                  "codigo_tipo_produto": {
                    "type": "array",
                    "nullable": true,
                    "description": "Identificação dos tipos de produtos, onde um deles precisa estar na compra para ser aplicado o desconto.",
                    "items": {
                      "type": "string",
                      "example": "877"
                    }
                  },
                  "texto_descricao_restricao": {
                    "type": "string",
                    "description": "Texto descritivo que será apresentado caso a restrição do consumo mínimo não seja atingida.",
                    "example": "É necessário ter no mínimo 1 filtro de óleo homologado."
                  },
                  "valor_fixo_produto": {
                    "type": "number",
                    "description": "Valor fixo a ser atribuído aos produtos caso o tipo de desconto da campanha seja VALOR_FIXO_PRODUTO.",
                    "example": 0.15
                  }
                },
                "required": [
                  "tipo_consumo",
                  "consumo_minimo",
                  "tipo_codigo",
                  "codigo_produto",
                  "texto_descricao_restricao"
                ]
              }
            }
          },
          "required": [
            "escopo_desconto"
          ]
        },
        "RestricoesClientesPostDTO": {
          "type": "object",
          "title": "Restrições de Clientes",
          "description": "Lista de tipos de restrições de clientes em uma campanha",
          "properties": {
            "restricao": {
              "enum": [
                "HABILITADO",
                "DESABILITADO"
              ],
              "example": "HABILITADO"
            },
            "cpf": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 11,
                "maxLength": 11,
                "example": "11111111111"
              }
            }
          },
          "required": [
            "restricao",
            "cpf"
          ]
        },
        "RestricoesVeiculosPostDTO": {
          "type": "object",
          "title": "Restrições de Veículos",
          "description": "Lista de tipos de restrições de veículos em uma campanha",
          "properties": {
            "restricao": {
              "enum": [
                "HABILITADO",
                "DESABILITADO"
              ],
              "description": "Tipo de Restrição a ser aplicada\n\n- HABILITADA: habilita a restrição para as placas listadas\n- DEHABILITA: desabilita a restrição para as placas listadas",
              "example": "HABILITADO"
            },
            "placas": {
              "type": "array",
              "description": "Lista de placas a serem aplicadas a restrição",
              "items": {
                "type": "string",
                "minLength": 7,
                "maxLength": 7,
                "example": "AAA1234"
              }
            }
          }
        },
        "LocaisHabilitadosDTO": {
          "type": "object",
          "title": "Locais Habilitados",
          "description": "É um conjunto de locais nos quais poderão serem usados os cupons gerados para a Campanha relacionada.\n\nPara a delimitação geográfica da campanha, é necessário que as informações de locais habilitados sejam preenchidas, restringindo assim o local de utilização do cupom disponibilizado aos consumidores finais.\n\nRequisitos:  \n- `situação` (obrigatório): Situação de uso do cupom nos locais registrados.\n  - `HABILITADO`: os locais registrados estarão habilitados para uso do cupom;\n  - `DESABILITADO`: os locais registrados estarão impedidos de permitir uso do cupom.",
          "properties": {
            "situacao": {
              "enum": [
                "HABILITADO",
                "DESABILITADO"
              ],
              "description": "Situação de uso do cupom nos locais registrados.\n\n- `HABILITADO`: os locais registrados estarão habilitados para uso do cupom\n- `DESABILITADO`: os locais registrados estarão impedidos de permitir uso do cupom",
              "example": "HABILITADO"
            },
            "componentes_postos": {
              "type": "array",
              "description": "Lista de componentes de postos",
              "items": {
                "type": "object",
                "properties": {
                  "cnpj_componente": {
                    "type": "string",
                    "description": "CNPJ do componente\r\nRestrições:\r\n- devem ser recusados números de CPNJ inválidos",
                    "pattern": "[0-9]",
                    "minLength": 14,
                    "maxLength": 14,
                    "example": "64315440000110"
                  },
                  "codigo_componente": {
                    "type": "integer",
                    "description": "Código de identificação interna do componente na base corporativa da Ipiranga.",
                    "minimum": 0,
                    "maximum": 99999999,
                    "example": 1332263
                  },
                  "latitude_componente": {
                    "type": "number",
                    "description": "Latitude de geolocalização do componente/posto.",
                    "format": "double"
                  },
                  "longitude_componente": {
                    "type": "number",
                    "description": "Longitude de geolocalização do componente/posto.",
                    "format": "double"
                  }
                },
                "required": [
                  "cnpj_componente",
                  "codigo_componente"
                ]
              }
            }
          },
          "required": [
            "situacao",
            "componentes_postos"
          ]
        },
        "CampanhaPublicadaDTORes": {
          "type": "object",
          "title": "CampanhaPublicadaDTORes",
          "description": "Estrutura de dados de Campanhas Promocionais publicadas (**ATIVADAS**)",
          "properties": {
            "id": {
              "type": "number",
              "description": "Chave de identificação da Campanha",
              "minimum": 1,
              "readOnly": true,
              "example": 1
            },
            "titulo": {
              "type": "string",
              "description": "Título da campanha",
              "minLength": 10,
              "maxLength": 30,
              "readOnly": true,
              "example": "Ano Novo é uma Viagem"
            },
            "subtitulo": {
              "type": "string",
              "description": "Subtítulo da Campanha",
              "minLength": 20,
              "maxLength": 50,
              "readOnly": true,
              "example": "Abasteça e passe o Ano Novo viajando com a família"
            },
            "descricao": {
              "type": "string",
              "description": "Descrição da campanha",
              "minLength": 30,
              "readOnly": true,
              "example": "Abasteça N litros nos postos da BR-040 e ganhe desconto nas lojas AmPm"
            },
            "data_inicio": {
              "type": "string",
              "description": "Data de início da campanha.\nRestrições:\n- igual ou maior que a data de cadastro",
              "format": "date-time",
              "readOnly": true,
              "example": "2022-12-01T00:00:01"
            },
            "data_termino": {
              "type": "string",
              "description": "Data de término da Campanha.\nRestrições:\n- maior que a data de início",
              "format": "date-time",
              "readOnly": true,
              "example": "2023-01-31T23:59:59"
            },
            "tipo_campanha": {
              "enum": [
                "IPIRANGA",
                "REVENDA"
              ],
              "description": "Tipo de Campanha (Ipiranga ou Revenda)",
              "readOnly": true,
              "example": "IPIRANGA"
            },
            "un_gestora": {
              "type": "string",
              "description": "Identificação de Unidade de Negócios, Revenda, Franqueado que é responsável pela campanha.\nRestrições:\n- obtida do usuário autenticado.",
              "maxLength": 15,
              "example": "Marketing"
            },
            "situacao": {
              "enum": [
                "PLANEJADA",
                "ATIVA",
                "CANCELADA",
                "FINALIZADA"
              ],
              "description": "Estado de operação atual da Campanha.\n- PLANEJADA: Campanha foi cadastrada e tem todos os seus parâmetros (Locais Habilitados, Tipos de Usos, Restrições de Clientes e Restrições de Veículos) registrados.\n- ATIVA: A Campanha foi publicada em redes sociais permitidas\n- CANCELADA: A Campanha foi cancela por motivo diretiva superior (legal, estratégica etc)\n- FINALIZADA: A campanha teve o seu período finalizado e mais de 95% foram resgatados",
              "readOnly": true,
              "example": "PLANEJADA"
            },
            "tipo_desconto": {
              "enum": [
                "BRL",
                "PORCENTAGEM",
                "VALOR_FIXO_PRODUTO"
              ],
              "description": "Tipo de desconto a ser aplicado pelos cupons da campanha, se em valor monetário (BRL), percentual ou valor fixo de produto.",
              "example": "BRL"
            },
            "valor_desconto": {
              "type": "number",
              "description": "Valor de desconto a ser aplicado ao ser usado (queima) o cupom.\nRestrições:\n- `Parametrizacoes.campanha_valor_minimo_desconto != 0`\n- `>= Parametrizacoes.campanha_valor_minimo_desconto`\n- `Parametrizacoes.campanha_valor_maximo_desconto != 0`\n- `<= Parametrizacoes.campanha_valor_maximo_desconto`",
              "format": "float",
              "minimum": 0
            },
            "maximo_desconto": {
              "type": "number",
              "description": "Valor monetário máximo de desconto a ser aplicado ao ser usado (queima) o cupom, caso o tipo de desconto da campanha seja em percentual (%).\nRestrições:\n- `Parametrizacoes.campanha_valor_minimo_desconto_taxa != 0`\n- `>= Parametrizacoes.campanha_valor_minimo_desconto_taxa`\n- `Parametrizacoes.campanha_valor_maximo_desconto_taxa != 0`  \n- `<= Parametrizacoes.campanha_valor_maximo_desconto_taxa`",
              "format": "float"
            },
            "quantidade_cupons": {
              "type": "integer",
              "description": "Quantidade de cupons a serem disponibilizados para a campanha.\nRestrições:\n- `Parametrizacoes.campanha_quantidade_minima_cupons != 0`\n- `>= Parametrizacoes.campanha_quantidade_minima_cupons`\n- `Parametrizacoes.campanha_quantidade_maxima_cupons != 0`\n- `<= Parametrizacoes.campanha_quantidade_maxima_cupons`",
              "readOnly": true,
              "example": 1000
            },
            "periodo_expiracao_cupom": {
              "type": "integer",
              "description": "Periodo em dias em que os cupons irão expirar após a data de resgate.\n\nRestrições:\n- `Parametrizacoes.campanha_periodo_minimo_expiracao_cupom != 0`\n- `>= Parametrizacoes.campanha_periodo_minimo_expiracao_cupom`\n- `Parametrizacoes.campanha_periodo_maximo_expiracao_cupom != 0`\n- `<= Parametrizacoes.campanha_periodo_maximo_expiracao_cupom`",
              "example": 5
            },
            "cupons_resgatados": {
              "type": "integer",
              "description": "Quantidade de cupons que já foram resgatados na Campanha pelos Consumidores Finais",
              "format": "int32",
              "readOnly": true
            },
            "cupons_queimados": {
              "type": "integer",
              "description": "Quantidade de cupons que já foram usados na Campanha pelo Consumidor Final (na Automação).",
              "format": "int32"
            },
            "rede_social_publicada": {
              "type": "array",
              "description": "Redes Sociais em que a Campanha será publicada.\n\nRestrições:\n- `Parametrizacoes.campanha_redes_sociais_habilitadas != None`\n- `== Parametrizacoes.campanha_redes_sociais_habilitadas`",
              "items": {
                "type": "string",
                "example": "Instagram"
              }
            },
            "usuario_id": {
              "type": "string",
              "description": "Identificação do usuário que realiza o cadastro ou a alteração da Campanha.\nID deve ser obtida de serviço de autenticação (exemplo: AD)\n\n*Conformidade*:\n- Manter rastreabilidade dos dados, sendo possível identificar a data e hora de criação da campanha e o usuário que a criou/alterou.\n",
              "example": "fulano.id"
            },
            "cupons_limite_usuario": {
              "type": "object",
              "description": "Determina o limite de cupons que poderão ser queimados por usuário.",
              "properties": {
                "quantidade": {
                  "type": "integer",
                  "description": "Quantidade de cupons que poderão ser queimados por usuário.",
                  "minimum": 1,
                  "example": 1
                },
                "periodicidade": {
                  "enum": [
                    "CAMPANHA",
                    "DIA",
                    "SEMANA",
                    "MES"
                  ],
                  "description": "Periodicidade que limite a queima de cupons por usuário. Considera-se:\n- CAMPANHA: Período completo da campanha.\n- DIA: dia vigente de 00h às 23:59h.\n- SEMANA: semana vigente de Domingo a Sábado.\n- MES: mês vigente.",
                  "example": "CAMPANHA"
                }
              },
              "required": [
                "quantidade",
                "periodicidade"
              ]
            },
            "tipo_cupom": {
              "enum": [
                "FIXO",
                "ALEATORIO"
              ],
              "description": "Tipo de cupom associado à campanha: FIXO ou ALEATORIO.",
              "example": "FIXO"
            },
            "codigo_cupom": {
              "type": "string",
              "description": "Código do cupom em caso de `tipo_cupom` =  `FIXO`.",
              "pattern": "[A-Z0-9]",
              "minLength": 3,
              "maxLength": 30,
              "example": "IPP10"
            },
            "perfil_acesso_id": {
              "type": "string",
              "description": "Identificação do perfil de acesso que o usuário tem no momento do cadastro ou alteração da campanha",
              "example": "marketing"
            },
            "data_cadastro": {
              "type": "string",
              "description": "Data de cadastro da campanha (ORM mantém automáticamente)",
              "format": "date-time"
            },
            "data_atualizacao": {
              "type": "string",
              "description": "Data da última alteração realizada na campanha (ORM mantém automaticamente)",
              "format": "date-time"
            },
            "restricoes_clientes": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "campanhas_id": {
                    "type": "number",
                    "example": 1
                  },
                  "restricao": {
                    "enum": [
                      "HABILITADO",
                      "DESABILITADO"
                    ],
                    "example": "HABILITADO"
                  },
                  "cpf": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 11,
                      "maxLength": 11,
                      "example": "11111111111"
                    }
                  },
                  "data_cadastro": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "data_atualizacao": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "restricoes_veiculos": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "campanhas_id": {
                    "type": "number",
                    "example": 1
                  },
                  "restricao": {
                    "enum": [
                      "HABILITADO",
                      "DESABILITADO"
                    ],
                    "example": "HABILITADO"
                  },
                  "placas": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 7,
                      "maxLength": 7,
                      "example": "AAA1234"
                    }
                  },
                  "data_cadastro": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "data_atualizacao": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "tipos_usos": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "campanhas_id": {
                  "type": "number",
                  "example": 1
                },
                "valor_minimo": {
                  "type": "number",
                  "nullable": true,
                  "description": "Valor mínimo monetário necessário de toda a cesta para utilização do cupom.",
                  "example": 100
                },
                "escopo_desconto": {
                  "enum": [
                    "TOTAL",
                    "PRODUTOS_LIMITADOS"
                  ],
                  "description": "Escopo do desconto a ser aplicado: `TOTAL` ou `PRODUTOS_LIMITADOS`.",
                  "example": "TOTAL"
                },
                "consumo_minimo_produtos": {
                  "type": "array",
                  "description": "Consumo mínimo individualizado por produto necessário para aplicação do desconto.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tipo_consumo": {
                        "enum": [
                          "QUANTIDADE",
                          "VALOR"
                        ],
                        "description": "Tipo de consumo a ser validado, por quantidade ou valor total de produto.",
                        "readOnly": true,
                        "example": "QUANTIDADE"
                      },
                      "consumo_minimo": {
                        "type": "number",
                        "description": "Quantidade ou Valor mínimo necessário do produto.",
                        "minimum": 1,
                        "example": 3
                      },
                      "tipo_codigo": {
                        "enum": [
                          "GRUPO",
                          "PRODUTO"
                        ],
                        "description": "Tipo do código de produto enviado: GRUPO ou PRODUTO.",
                        "example": "GRUPO"
                      },
                      "codigo_produto": {
                        "type": "array",
                        "description": "Identificação dos produtos ou grupos de produtos, onde um deles precisa estar na compra para ser aplicado o desconto.",
                        "items": {
                          "type": "string",
                          "example": "107"
                        }
                      },
                      "codigo_tipo_produto": {
                        "type": "array",
                        "nullable": true,
                        "description": "Identificação dos tipos de produtos, onde um deles precisa estar na compra para ser aplicado o desconto.",
                        "readOnly": true,
                        "items": {
                          "type": "string",
                          "example": "877"
                        }
                      },
                      "textoDescricaoRestricao": {
                        "type": "string",
                        "description": "Texto descritivo que será apresentado caso a restrição do consumo mínimo não seja atingida.",
                        "example": "É necessário ter no mínimo 1 filtro de óleo homologado."
                      },
                      "valor_fixo_produto": {
                        "type": "number",
                        "description": "Valor fixo a ser atribuído aos produtos caso o tipo de desconto da campanha seja VALOR_FIXO_PRODUTO.",
                        "example": 0.15
                      }
                    },
                    "required": [
                      "tipo_consumo",
                      "consumo_minimo",
                      "tipo_codigo",
                      "codigo_produto",
                      "textoDescricaoRestricao"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "campanhas_id",
                "escopo_desconto"
              ]
            }
          },
          "required": [
            "id",
            "titulo",
            "descricao",
            "data_inicio",
            "data_termino",
            "tipo_campanha",
            "un_gestora",
            "situacao",
            "tipo_desconto",
            "valor_desconto",
            "maximo_desconto",
            "quantidade_cupons",
            "periodo_expiracao_cupom",
            "cupons_resgatados",
            "cupons_queimados",
            "rede_social_publicada",
            "cupons_limite_usuario",
            "data_cadastro",
            "data_atualizacao",
            "tipos_usos"
          ]
        },
        "CampanhasFinalizarDTO": {
          "type": "object",
          "title": "CampanhasFinalizarDTO",
          "description": "DTO para finalizar Campanha",
          "properties": {
            "id": {
              "type": "integer",
              "description": "ID de Campanha a ser finalizada.",
              "minimum": 1,
              "default": 1,
              "example": 1
            }
          },
          "required": [
            "id"
          ]
        },
        "Parametrizacoes": {
          "type": "object",
          "title": "Parametrizações",
          "description": "Parametrizações de Sistema e Campanhas\n\nLimites Configuráveis de Campanhas Promocionais\n\nAlguns campos de Campanhas estarão limitados de acordo com valores mínimo e máximos de cada domínio e que restringirá todas as novas campanhas, evitando descontos que extrapolem diretrizes da empresa.\n\nDevido a padrões do ORM que por definição restringe criação de tabelas sem _Primary Key_, esta tabela irá conter o atributo ID como PK. E **todoas** operações nesta tabela devem ser realizadas no `ID = 1`.",
          "properties": {
            "campanha_valor_minimo_desconto": {
              "type": "number",
              "description": "Valor mínimo de desconto permitido para uma campanha.",
              "format": "float",
              "minimum": 0
            },
            "campanha_valor_maximo_desconto": {
              "type": "number",
              "description": "Valor máximo de desconto permitido para uma campanha.",
              "format": "float",
              "minimum": 0
            },
            "campanha_taxa_minima_desconto": {
              "type": "number",
              "description": "Percentual mínimo de desconto permitido para uma campanha.",
              "format": "float",
              "minimum": 0,
              "maximum": 100
            },
            "campanha_taxa_maxima_desconto": {
              "type": "number",
              "description": "Percentual máximo de desconto permitido para uma campanha.",
              "format": "float",
              "minimum": 0,
              "maximum": 100
            },
            "campanha_valor_minimo_desconto_taxa": {
              "type": "number",
              "description": "Valor mínimo de desconto permitido quando o tipo de desconto para uma campanha por percentual (%).",
              "format": "float",
              "minimum": 0
            },
            "campanha_valor_maximo_desconto_taxa": {
              "type": "number",
              "description": "Valor máximo de desconto permitido quando o tipo de desconto para uma campanha por percentual (%).",
              "format": "float",
              "minimum": 0
            },
            "campanha_periodo_minimo_expiracao_cupom": {
              "type": "integer",
              "description": "Quantidade mínima de dias que uma campanha pode definir para expiração de um cupom resgatado.",
              "format": "int32",
              "minimum": 0
            },
            "campanha_periodo_maximo_expiracao_cupom": {
              "type": "integer",
              "description": "Quantidade máxima de dias que uma campanha pode definir para expiração de um cupom resgatado.",
              "format": "int32",
              "minimum": 0
            },
            "campanha_quantidade_minima_cupons": {
              "type": "integer",
              "description": "Quantidade mínima de cupons que uma campanha poderá gerar.",
              "format": "int32",
              "minimum": 0
            },
            "campanha_quantidade_maxima_cupons": {
              "type": "integer",
              "description": "Quantidade máxima de cupons que uma campanha poderá gerar.",
              "format": "int32",
              "minimum": 0
            },
            "campanha_redes_sociais_habilitadas": {
              "type": "array",
              "description": "Redes sociais em que uma campanha poderá ser publicada.",
              "items": {
                "type": "string",
                "example": "Waze"
              }
            },
            "data_cadastro": {
              "type": "string",
              "description": "Data de registro inicial de parametrizações",
              "format": "date-time"
            },
            "data_atualizacao": {
              "type": "string",
              "description": "Data de registro de última atualização de parametrizações",
              "format": "date-time"
            }
          }
        },
        "ApiInfoDTO": {
          "type": "object",
          "title": "ApiInfoDTO",
          "description": "Dados da API",
          "properties": {
            "id": {
              "type": "string",
              "description": "Nome do projeto/repositório",
              "default": "voucher-manager-api",
              "example": "voucher-manager-api"
            },
            "version": {
              "type": "string",
              "description": "Nome de _branch_ git",
              "example": "develop"
            },
            "build": {
              "type": "string",
              "description": "Identificador no serviço de pipeline",
              "example": "123"
            },
            "release": {
              "type": "string",
              "description": "Commit SHA curto",
              "example": "ddf3efa"
            },
            "message": {
              "type": "string",
              "description": "Mensagem de estado da aplicação",
              "default": "A aplicação está em execução"
            }
          },
          "required": [
            "id",
            "version",
            "build",
            "release",
            "message"
          ]
        },
        "ApiStatusDTO": {
          "type": "object",
          "description": "Informações de estado da API",
          "properties": {
            "api": {
              "enum": [
                "OK",
                "ERROR"
              ],
              "description": "Estado da API",
              "default": "OK",
              "example": "OK"
            },
            "database": {
              "enum": [
                "OK",
                "ERROR"
              ],
              "description": "Serviços de banco de dados (PostgreSQL, ORA etc)",
              "example": "OK"
            },
            "databaseMigrationVersion": {
              "type": "string",
              "description": "Informa a versão de migração de banco atualmente aplicada.",
              "example": "8763670fcdd8"
            },
            "corporate": {
              "enum": [
                "OK",
                "ERROR"
              ],
              "description": "Serviço corporativo de dados (Corporate Ensemble outros)",
              "example": "OK"
            },
            "login": {
              "enum": [
                "OK",
                "ERROR"
              ],
              "description": "Serviço de controle de autenticação e acesso (ex: AD, LDAP, AUTH0 etc)",
              "example": "OK"
            },
            "dataStreaming": {
              "enum": [
                "OK",
                "ERROR"
              ],
              "description": "Serviço de streaming de dados ou chave/valor (ex: Kafka)",
              "example": "OK"
            },
            "dataCache": {
              "enum": [
                "OK",
                "ERROR"
              ],
              "description": "Serviço de cache de dados ou chave/valor (ex: redis)",
              "example": "OK"
            },
            "message": {
              "type": "string",
              "description": "Mensagem de saúde da API"
            },
            "details": {
              "type": "array",
              "description": "Detalhes de erros de estado da API",
              "items": {
                "$ref": "#/components/schemas/ApiStatusDetails"
              }
            }
          },
          "required": [
            "api",
            "database",
            "databaseMigrationVersion",
            "message"
          ]
        },
        "ApiStatusDetails": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Informações do erro ocorrido",
              "example": "OperationalError('(psycopg2.OperationalError) could not translate host name"
            },
            "service": {
              "type": "string",
              "description": "Serviço em que o erro ocorreu",
              "example": "database"
            },
            "type": {
              "type": "string",
              "description": "Tipo de erro",
              "example": "db-server-name"
            }
          },
          "required": [
            "error",
            "service",
            "type"
          ]
        }
      }
    },
    "security": [
      {
        "API-Key-Token": []
      }
    ]
  }